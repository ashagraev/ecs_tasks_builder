name: deploy service

on:
  push:
    branches:
      - main
    paths:
      - 'source_folder/**'

env:
  AWS_REGION: $REGION
  ECR_REPOSITORY: $ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com
  SOURCE_PATH: $SOURCE_PATH
  SERVICE: $SERCICE_NAME
  IMAGE_TAG: ${{ github.sha }}
  ECS_TASK_DEFINITION: ecs_task_definition.json
  ECS_CLUSTER: $CLUSTER

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2

      - name: Build the Docker image
        run: |
          docker build --tag $SERVICE:$GITHUB_SHA $SOURCE_PATH
      - name: Push the image to Amazon ECR
        id: push-image
        run: |
          docker tag $SERVICE:$IMAGE_TAG $ECR_REPOSITORY/$SERVICE:$IMAGE_TAG
          docker push $ECR_REPOSITORY/$SERVICE:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REPOSITORY/$SERVICE:$IMAGE_TAG"

      - name: Update image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@97587c9d45a4930bf0e3da8dd2feb2a463cf4a3a
        with:
          task-definition: ${{ env.SOURCE_PATH }}/${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.SERVICE }}
          image: ${{ steps.push-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1.4.10
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
